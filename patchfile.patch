--- vncrec/argsresources.c.orig	2008-04-08 11:06:23.000000000 -0500
+++ vncrec/argsresources.c	2008-03-20 10:58:00.000000000 -0500
@@ -363,7 +363,11 @@
       const char * infile = appData.play ? appData.play : appData.movie;
       char buf[64];
       size_t size;
-      vncLog = fopen (infile, "r");
+      if (!strcmp("-", infile)) {
+        vncLog = stdin;
+      } else {
+        vncLog = fopen (infile, "r");
+      }
       if (vncLog == NULL)
 	{
 	  fprintf (stderr, "%s: failed to open %s\n",
@@ -387,7 +391,11 @@
     }
   else if (appData.record)
     {
-      vncLog = fopen (appData.record, "w");
+      if (!strcmp("-", appData.record)) {
+        vncLog = stdout;
+      } else {
+        vncLog = fopen (appData.record, "w");
+      }
       if (vncLog == NULL)
 	{
 	  fprintf (stderr, "%s -record: failed to open %s\n",
--- vncrec/rfbproto.c.orig	2008-04-08 11:06:13.000000000 -0500
+++ vncrec/rfbproto.c	2008-03-20 06:40:37.000000000 -0500
@@ -27,6 +27,7 @@
 #include <pwd.h>
 #include <vncviewer.h>
 #include <vncauth.h>
+#include <fcntl.h>
 
 static Bool HandleRRE8(int rx, int ry, int rw, int rh);
 static Bool HandleRRE16(int rx, int ry, int rw, int rh);
@@ -164,7 +165,7 @@
     } else if (appData.passwordDialog) {
       passwd = DoPasswordDialog();
     } else {
-      passwd = getpass("Password: ");
+      passwd = ReadPasswdFile(".vncrecpasswd");
     }
 
     if ((!passwd) || (strlen(passwd) == 0)) {
@@ -719,3 +720,37 @@
     }
   }
 }
+
+/*
+ * ReadPasswdFile.
+ * When connecting to a remote vnc server, don't prompt the user for a
+ * password. Instead, read it from a file
+ */
+char *ReadPasswdFile(char *fname) {
+  char *passwd;
+  int fd, plen, x;
+  int maxpwlen = 50;
+  passwd = malloc(sizeof(char) * (maxpwlen+1));
+  fd = open(fname, O_RDONLY);
+  if(fd == -1) {
+    fprintf(stderr, "Failed to open %s\n", fname);
+    return(NULL);
+  } else {
+    plen = (int) read(fd, passwd, maxpwlen);
+    close(fd);
+    fprintf(stderr, "Read in %d bytes from %s\n", plen, fname);
+    if(plen < 1) {
+      fprintf(stderr, "error: %d\n", errno);
+      return(NULL);
+    } else {
+      passwd[plen] = 0;
+      for(x=0; x<plen; x++) {
+        if(passwd[x] == 10) {
+          passwd[x] = 0;
+          x=plen;
+	}
+      }
+      return passwd;
+    }
+  }
+}
--- vncrec/vncviewer.h.orig	2008-04-08 11:05:36.000000000 -0500
+++ vncrec/vncviewer.h	2008-03-20 06:05:21.000000000 -0500
@@ -198,6 +198,7 @@
 extern Bool HandleRFBServerMessage();
 
 extern void PrintPixelFormat(rfbPixelFormat *format);
+extern char *ReadPasswdFile(char *fname);
 
 /* selection.c */
 
--- vncconnect/vncconnect.c.orig	2015-01-29 20:46:46.641636207 -0600
+++ vncconnect/vncconnect.c	2015-01-29 20:49:26.140584189 -0600
@@ -3,6 +3,8 @@
  */
 
 #include <stdio.h>
+#include <stdlib.h>
+#include <string.h>
 #include <X11/Xlib.h>
 #include <X11/Xatom.h>
 
--- README.orig	2008-04-08 13:25:18.000000000 -0500
+++ README	2008-04-08 13:25:07.000000000 -0500
@@ -6,6 +6,40 @@
   QUICK  for -movie below)
   START
 
+
+Amigo's patched vncrec
+~~~~~~~~~~~~~~~~~~~~~~
+Starting with the Twibright patches to vncrec (see below in this readme), I
+made a couple minor modifications:
+ - allow reading from stdin and writing to stdout.  Use - as a filename.
+ - read password from .vncrecpasswd instead of prompting for a password.
+
+The purpose of both of these changes is to facilitate using vncrec in a script.
+Writing to stdout allows the output to be piped to gzip.
+
+One use scenario is this:
+ # Xvfb :1 &
+ # export DISPLAY=:1
+ # vncrec -record - ip.ad.dre.ss:0 -shared -viewonly -encodings raw | gzip -c9 > logfile.vnc.gz
+
+Because vncrec needs an X display to run, use Xvfb to create a virtual one.
+When logging a long session, vncrec isn't helpful as a review tool... there's
+no pause, rew, ff, etc.  Instead, we want to use pyvnc2swf to convert the
+session to flash format with a progress bar for seeking through the recording.
+
+However, pyvnc2swf doesn't recognize CopyRect (a standard VNC encoding), we
+instead use "raw".  But since the raw encoding would generate a huge file,
+it's piped to gzip.
+
+Using pyvnc2swf to simply record files into a flash format would be nice, but
+it uses about 100 times more CPU power than gzip.  Bzip2 is another contender,
+but even bzip2 -1 uses more CPU time than gzip -9 and produces a larger file.
+
+I have found no other feasible way of recording several multi-hour VNC sessions
+on a single server.
+
+
+
 Twibright vncrec
 ================
 
